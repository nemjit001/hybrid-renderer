<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 10.0.1 (20240210.2158)
 -->
<!-- Title: hri::PipelineLayoutBuilder Pages: 1 -->
<svg width="153pt" height="220pt"
 viewBox="0.00 0.00 153.00 220.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 216)">
<title>hri::PipelineLayoutBuilder</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="The Pipeline Layout Builder allows easy building of pipeline layouts.">
<polygon fill="#999999" stroke="none" points="145,-212 0,-212 0,0 145,0 145,-212"/>
<text text-anchor="start" x="17.38" y="-198.5" font-family="Helvetica,sans-Serif" font-size="10.00">hri::PipelineLayoutBuilder</text>
<text text-anchor="start" x="71" y="-182.5" font-family="Helvetica,sans-Serif" font-size="10.00">Â </text>
<text text-anchor="start" x="4" y="-166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-166.5" font-family="Helvetica,sans-Serif" font-size="10.00">PipelineLayoutBuilder</text>
<text text-anchor="start" x="14" y="-154.5" font-family="Helvetica,sans-Serif" font-size="10.00">(RenderContext *ctx)</text>
<text text-anchor="start" x="4" y="-138.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-138.5" font-family="Helvetica,sans-Serif" font-size="10.00">virtual ~PipelineLayoutBuilder</text>
<text text-anchor="start" x="14" y="-126.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
<text text-anchor="start" x="4" y="-110.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-110.5" font-family="Helvetica,sans-Serif" font-size="10.00">PipelineLayoutBuilder</text>
<text text-anchor="start" x="14" y="-98.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; addPushConstant(size</text>
<text text-anchor="start" x="14" y="-86.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t size, VkShaderStageFlags</text>
<text text-anchor="start" x="14" y="-74.5" font-family="Helvetica,sans-Serif" font-size="10.00"> shaderStages)</text>
<text text-anchor="start" x="4" y="-58.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-58.5" font-family="Helvetica,sans-Serif" font-size="10.00">PipelineLayoutBuilder</text>
<text text-anchor="start" x="14" y="-46.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; addDescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-34.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-22.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;setLayout)</text>
<text text-anchor="start" x="4" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">VkPipelineLayout build()</text>
<polygon fill="#666666" stroke="#666666" points="0,-194 0,-194 145,-194 145,-194 0,-194"/>
<polygon fill="#666666" stroke="#666666" points="0,-178 0,-178 145,-178 145,-178 0,-178"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-212 145,-212 145,0 0,0"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
