<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 10.0.1 (20240210.2158)
 -->
<!-- Title: hri::DescriptorSetLayout Pages: 1 -->
<svg width="209pt" height="360pt"
 viewBox="0.00 0.00 209.00 360.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 356)">
<title>hri::DescriptorSetLayout</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="A Descriptor Set Layout is used to specify bind points for resource descriptors in shaders.">
<polygon fill="#999999" stroke="none" points="201,-352 0,-352 0,0 201,0 201,-352"/>
<text text-anchor="start" x="48" y="-338.5" font-family="Helvetica,sans-Serif" font-size="10.00">hri::DescriptorSetLayout</text>
<text text-anchor="start" x="4" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">VkDescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00"> setLayout</text>
<text text-anchor="start" x="4" y="-294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-294.5" font-family="Helvetica,sans-Serif" font-size="10.00">DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">(RenderContext &amp;ctx,</text>
<text text-anchor="start" x="14" y="-270.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::unordered_map&lt; uint32</text>
<text text-anchor="start" x="14" y="-258.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t, VkDescriptorSetLayoutBinding</text>
<text text-anchor="start" x="14" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; bindings, VkDescriptorSetLayoutCreate</text>
<text text-anchor="start" x="14" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags flags=0)</text>
<text text-anchor="start" x="4" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00">virtual ~DescriptorSetLayout()</text>
<text text-anchor="start" x="4" y="-202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-202.5" font-family="Helvetica,sans-Serif" font-size="10.00">DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;)=delete</text>
<text text-anchor="start" x="4" y="-162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-162.5" font-family="Helvetica,sans-Serif" font-size="10.00">DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const Descriptor</text>
<text text-anchor="start" x="14" y="-138.5" font-family="Helvetica,sans-Serif" font-size="10.00">SetLayout &amp;)=delete</text>
<text text-anchor="start" x="4" y="-122.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-122.5" font-family="Helvetica,sans-Serif" font-size="10.00">DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-110.5" font-family="Helvetica,sans-Serif" font-size="10.00">(DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-98.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other) noexcept</text>
<text text-anchor="start" x="4" y="-82.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-82.5" font-family="Helvetica,sans-Serif" font-size="10.00">DescriptorSetLayout</text>
<text text-anchor="start" x="14" y="-70.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(DescriptorSet</text>
<text text-anchor="start" x="14" y="-58.5" font-family="Helvetica,sans-Serif" font-size="10.00">Layout &amp;&amp;other) noexcept</text>
<text text-anchor="start" x="4" y="-42.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-42.5" font-family="Helvetica,sans-Serif" font-size="10.00">const std::unordered</text>
<text text-anchor="start" x="14" y="-30.5" font-family="Helvetica,sans-Serif" font-size="10.00">_map&lt; uint32_t, VkDescriptor</text>
<text text-anchor="start" x="14" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">SetLayoutBinding &gt; &amp; bindings</text>
<text text-anchor="start" x="14" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<polygon fill="#666666" stroke="#666666" points="0,-334 0,-334 201,-334 201,-334 0,-334"/>
<polygon fill="#666666" stroke="#666666" points="0,-306 0,-306 12,-306 12,-306 0,-306"/>
<polygon fill="#666666" stroke="#666666" points="12,-306 12,-306 201,-306 201,-306 12,-306"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-352 201,-352 201,0 0,0"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
